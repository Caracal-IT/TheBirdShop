body {
}

.paypal {
    width: 70px;
    height: 70px;
    background-image: url(images/PayPalCard.png);
    background-size: 70px;
    background-repeat: no-repeat;
    display: inline-block;
}

#splashScreen {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    background-position: center center;
    background-size: 20%;
    background-image: url(images/loading.png);
    background-repeat: no-repeat;
    animation: spinX 3s infinite;
}

@-webkit-keyframes spinX {
    0% {
        -webkit-transform: rotateX(0deg);
        -webkit-transform-origin: 0% 50% 0;
    }

    100% {
        -webkit-transform: rotateX(360deg);
        -webkit-transform-origin: 0% 50% 0;
    }
}

@keyframes spinX {
    0% {
        transform: rotateX(0deg);
        transform-origin: 0% 50% 0;
    }

    100% {
        transform: rotateX(360deg);
        transform-origin: 0% 50% 0;
    }
}

.bird {
    width: 175px;
    border:1px solid black;      
    padding: 5px 10px 5px 5px;  
    margin-bottom:10px;  
}

.sprite {
    width: 90px;
    height: 90px;
    background-image: url(images/birdSprite.jpg);
    background-size: 450px;
    background-repeat: no-repeat;
    display:block;
}

.sprite-birdSprite1 {    
    background-position: -45px -44px;    
}
.sprite-birdSprite2 {    
    background-position: -143px -44px;    
}
.sprite-birdSprite3 {
    background-position: -232px -44px;
}
.sprite-birdSprite4 {
    background-position: -315px -44px;
}
.sprite-birdSprite5 {
    background-position: -45px -139px;
}
.sprite-birdSprite6 {
    background-position: -133px -138px;
}
.sprite-birdSprite7 {
    background-position: -232px -138px;
}
.sprite-birdSprite8 {
    background-position: -315px -136px;
}
.sprite-birdSprite9 {
    background-position: -46px -230px;
}
.sprite-birdSprite10 {
    background-position: -140px -230px;
}

input[type=checkbox] {
    position: absolute;
    top: -9999px;
    left: -9999px;
}

    input[type=checkbox] ~ label::before {
        content: '\2713';
        font-size:1.3em;
        display: inline-block;
        text-align: center;
        color: white;
        line-height: 1em;
        width: 1em;
        height: 1em;
        border: 1px inset silver;
        border-radius: 0.25em;
        margin: 0.25em;
    }

    input[type=checkbox]:checked ~ label::before {
        color: black;
    }




.gu-mirror {
    position: fixed !important;
    margin: 0 !important;
    z-index: 9999 !important;
    opacity: .8;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
    filter: alpha(opacity=80);
}

.gu-hide {
    display: none !important;
}

.gu-unselectable {
    -webkit-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;
    user-select: none !important;
}

.gu-transit {
    opacity: .2;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
    filter: alpha(opacity=20);
}




.container2 {
    display: block;
    background-color2: rgba(255, 255, 255, 0.2);
    width: 50%;
    height:600px!important;
}

    .container2:nth-child(odd) {
        background-color2: rgba(0, 0, 0, 0.2);
    }
    /*
 * note that styling gu-mirror directly is a bad practice because it's too generic.
 * you're better off giving the draggable elements a unique class and styling that directly!
 */
    .container2 div,
    .gu-mirror {       
        background-color2: rgba(0, 0, 0, 0.2);
        transition: opacity 0.4s ease-in-out;
    }

    .container2 div {
        cursor: move;
        cursor: grab;
        cursor: -moz-grab;
        cursor: -webkit-grab;
    }

.gu-mirror {
    cursor: grabbing;
    cursor: -moz-grabbing;
    cursor: -webkit-grabbing;
}

.container2 .ex-moved {
    background-color2: #e74c3c;
}

.container2.ex-over {
    background-color2: rgba(255, 255, 255, 0.3);
}

.handle {
    padding: 0 5px;
    margin-right: 5px;
    background-color: rgba(0, 0, 0, 0.4);
    cursor: move;
}
